Functionality
    add filtering to tables that need it
        bar log
        cash log
    add pages 'dagboek' and 'kasboek'
    uploading of attachments
    add notifications
    add an api vwcr can hook into
    add active field for stock items instead of removing them
    add a way to show a members' membership fees payment history

Refactoring
    split views.py into multiple files based on categories
    put templates in directories based on categories
    make database object model names singular
    check the way users are activated: active, actief_lid, membership role
    check if setattrs are caried over
    remove unused code from flask_security/ (~2000 of ~3000 LOC are in here)
    Minimize the number of times we read or write to the DB
    check validity of XHTML, CSS & JS
    fix whitespace in produced XHTML

Bugs
    permissions and user email are saved in user session. this is only written on login. Therefore users will need to log out and log back in to see the change.
    somehow the textarea tag around the motivation field is sent along and written to the DB. these tags are then stripped in the view by using the striptag filter. This doesn't happen when using the TextAreaField outside flask_security

Usability
    improve graphical design
        use symbolic icons
    add a red border around an input element that doesn't validate

Before deployment
    forms checklist:
        redirect after a POST (to prevent data from being submitted twice if users refresh the page)
        use all necessary validators
        use if form.validate_on_submit():
        templates don't define their own input elements
        use functions to process booleans
        use add_confirmation()

Might be cool:
    add validator to check if a new stock item name is unique
    (accept both commas or periods on decimal fields)
