Functionality
    delete stock items
    add transactions DB
    make accounting forms
    filtering of tables
    pagination of tables
    add validator to check if a new stock item name is unique
    add notifications
    add date picker

Refactoring
    check the way users are activated: active, actief_lid, membership role
    check if setattrs are caried over
    remove unused code from flask_security/ (~2000 of ~3000 LOC are in here)
    Minimize the number of times we read or write to the DB
    check validity of XHTML, CSS & JS
    fix whitespace in produced XHTML 

Bugs
    permissions and user email are saved in user session. this is only written on login. Therefore users will need to log out and log bak in tosee the change.
    somehow the textarea tag around the motivation field is sent along and written to the DB. these tags are then stipped in the view by using the striptag filter. This doesn't happen when using the TextAreaField outside flask_security

Usability
    improve graphical design

Before deployment
    forms checklist:
        redirect after a POST (to prevent data from being submitted twice if users refresh the page)
        use all necessary validators
        use if form.validate_on_submit():
        templates don't define their own input elements
        use functions to process booleans
        take 'form' out of form names, import the whole form module
        use add_confirmation()
